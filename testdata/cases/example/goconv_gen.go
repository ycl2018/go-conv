// Code generated by github.com/ycl2018/go-conv DO NOT EDIT.

package example

func CopyPtrFooToPtrBar(src *Foo) (dst *Bar) {
	if src != nil {
		dst = new(Bar)
		dst.Str = src.Str
		if len(src.Slice) > 0 {
			dst.Slice = make([]string, len(src.Slice))
			for i := 0; i < len(src.Slice); i++ {
				dst.Slice[i] = src.Slice[i]
			}
		}
		if len(src.Map) > 0 {
			dst.Map = make(map[string]string, len(src.Map))
			for k, v := range src.Map {
				var tmpK string
				var tmpV string
				tmpK = k
				tmpV = v
				dst.Map[tmpK] = tmpV
			}
		}
		dst.Pointer = new(string)
		*dst.Pointer = src.Pointer
		dst.Alias = StringAlias(src.Alias)
	}
	return
}
func init() {
	Foo2Bar = CopyPtrFooToPtrBar
}
