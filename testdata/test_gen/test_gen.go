// Code generated by github.com/ycl2018/go-conv DO NOT EDIT.

package test_gen

import (
	"go-conv/testdata/domain"
	"go-conv/testdata/model"
)

func DomainPetToModelPet(src *domain.Pet) (dst *model.Pet) {
	if src != nil {
		dst = new(model.Pet)
		dst.ID = src.ID
		dst.Name = src.Name
		if src.Status != nil {
			dst.Status = new(string)
			*dst.Status = string(*src.Status)
		}
		for i := 0; i < 3; i++ {
			dst.Children[i] = DomainCategoryToModelCategory(src.Children[i])
		}
		if len(src.Childrens) > 0 {
			dst.Childrens = make([]*model.Category, len(src.Childrens))
			for i := 0; i < len(src.Childrens); i++ {
				dst.Childrens[i] = DomainCategoryToModelCategory(src.Childrens[i])
			}
		}
		if len(src.MapChild) > 0 {
			dst.MapChild = make(map[string]*model.Category, len(src.MapChild))
			for k, v := range src.MapChild {
				var (
					tmpK	string
					tmpV	*model.Category
				)
				tmpK = k
				tmpV = DomainCategoryToModelCategory(v)
				dst.MapChild[tmpK] = tmpV
			}
		}
	}
	return
}
func DomainCategoryToModelCategory(src *domain.Category) (dst *model.Category) {
	if src != nil {
		dst = new(model.Category)
		dst.CategoryID = src.CategoryID
		dst.Name = src.Name
		dst.Foo = DomainFooToModelFoo(src.Foo)
	}
	return
}
func DomainFooToModelFoo(src *domain.Foo) (dst *model.Foo) {
	if src != nil {
		dst = new(model.Foo)
		if src.Bar != nil {
			dst.Bar = new(string)
			*dst.Bar = *src.Bar
		}
	}
	return
}